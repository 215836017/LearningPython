print('函数式编程')
'''
1. 函数式编程就是一种抽象程度很高的编程范式，纯粹的函数式编程语言编写的函数没有变量，因此，任意一个函数，只要输入是确定的，
   输出就是确定的，这种纯函数我们称之为没有副作用。而允许使用变量的程序设计语言，由于函数内部的变量状态不确定，同样的输入，
   可能得到不同的输出，因此，这种函数是有副作用的。
2. 函数式编程的一个特点就是，允许把函数本身作为参数传入另一个函数，还允许返回一个函数！
3. Python对函数式编程提供部分支持。由于Python允许使用变量，因此，Python不是纯函数式编程语言
'''


print('函数式编程 --- 高阶函数')
'''
变量可以指向函数
1. 函数本身也可以赋值给变量，即：变量可以指向函数
'''
def test_funToVar(x):
    print('in fun test_funToVar(), the params is:', x)

var = test_funToVar

var('abcdef')

'''
函数名也是变量
1. 那么函数名是什么呢？函数名其实就是指向函数的变量！对于abs()这个函数，完全可以把函数名abs看成变量，它指向一个可以计算绝对值的函数！
2. 如果把abs指向其他对象，会有什么情况发生？
   比如把abs指向10后，就无法通过abs(-10)调用该函数了！因为abs这个变量已经不指向求绝对值函数而是指向一个整数10！
   当然实际代码绝对不能这么写，这里是为了说明函数名也是变量。要恢复abs函数，请重启Python交互环境
'''

'''
传入函数
1. 既然变量可以指向函数，函数的参数能接收变量，那么一个函数就可以接收另一个函数作为参数，这种函数就称之为高阶函数
'''
def test_heihFun(x, y, f):
    f(x)
    f(y)
test_heihFun('aaaaaaaaa', '111111111111', var)