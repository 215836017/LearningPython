#!/usr/bin/env python3

# 标题: Python中的算术运算
print('python中')

'''
1. 整数:
1). Python可以处理任意大小的整数，当然包括负整数，在程序中的表示方法和数学上的写法一模一样，
例如：1，100，-8080，0，等等。

2). 计算机由于使用二进制，所以，有时候用十六进制表示整数比较方便，十六进制用0x前缀和0-9，a-f表示，
例如：0xff00，0xa5b4c3d2，等等。
'''

'''
2.浮点数:
1). 浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，
比如，1.23x109(9是上标)和12.3x108(8是上标)是完全相等的。

2). 浮点数可以用数学写法，如1.23，3.14，-9.01，等等。但是对于很大或很小的浮点数，就必须用科学计数法表示，
把10用e替代，1.23x109就是1.23e9，或者12.3e8，0.000012可以写成1.2e-5，等等。

3). 整数和浮点数在计算机内部存储的方式是不同的，整数运算永远是精确的（除法难道也是精确的？是的！），
而浮点数运算则可能会有四舍五入的误差。
'''

'3. Python中的运算'
'加法运算的符号是+ ， 减法运算的符号是 - ， 乘法运算的符号是 * ，除法运算的符号是 / ， 求余运算的符号是  %'
print('2 + 5 =', 2 + 2)
print('2 - 5 =', 2 - 5)
print('2 * 5 =', 2 * 5)
print('2 / 5 =', 2 / 5)
print('5 % 2 =', 5 % 2)

'除法运算的结果为小数，即浮点数。如果想丢弃小数部分，即执行整除运算，可使用双斜杠 // '
print('2 / 5 =', 2 // 5)
print('5 / 2 =', 5 // 2)

'对于整除运算，它的原理是向下圆整，因此在结果为负数的情况下，圆整后结果离0更远。'
print('10 // 3 = ', 10 // 3)
print('-10 // 3 = ', -10 // 3)
print('10 // -3 = ', 10 // -3)
print('-10 // -3 = ', -10 // -3)

'求余运算符也可以用于浮点数和负数。'
print('2.75 % 0.5 = ', 2.75 % 0.5)
print('10.1 % 2 = ', 10.1 % 2)
print('10.2 % 2 = ', 10.2 % 2)
print('10.1 % 3 = ', 10.1 % 3)
print('10 % 3 = ', 10 % 3)
print('10 % -3 = ', 10 % -3)
print('-10 % 3 = ', -10 % 3)
print('-10 % -3 = ', -10 % -3)

'在Python中，*表示乘法，乘方（求幂）运算的符号是  **'
print('2的3次方 = ', 2 ** 3)
print('负的3的2次方 = ', -3 ** 2)
print('负3的2次方 = ', (-3) ** 2)
print('负3的3次方 = ', (-3) ** 3)

a = 3
b = 2
print('a * b ', a * b)
print('a ** b', a ** b)

'''
5. 除法
1). 在Python中，有两种除法： / 和  //
2). /除法计算结果是浮点数，即使是两个整数恰好整除，结果也是浮点数
3). // 称为整除，两个整数的除法仍然是整数, 即只取结果的整数部分  
4). Python还提供一个余数运算: %，可以得到两个整数相除的余数
'''
print('测试Python中的除法运算：')
print("10 / 3 =", 10 / 3)
print("10 // 3 =", 10 // 3)
print("9 // 3 =", 9 // 3)
print("9 // 3 =", 9 // 3)
print("10 % 3 =", 10 % 3)
print("9 % 3 =", 9 % 3)
'''
10 / 3 = 3.3333333333333335
10 // 3 = 3
9 // 3 = 3
9 // 3 = 3
10 % 3 = 1
9 % 3 = 0
'''

'''
6. 字符串转整形：使用int()方法 --- 使用int()方法强制转换后需要用一个变量去接收
'''
salary = '999'
salary1 = int(salary)
# print(salary, salary1)
print("salary: ", type(salary))
print("salary1: ", type(salary1))
print("salary = ", salary)
print("salary1 = %d" % salary1)
