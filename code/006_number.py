#!/usr/bin/env python3

# 标题: Python中的算术运算
print('python中')

'''
整数:
1. Python可以处理任意大小的整数，当然包括负整数，在程序中的表示方法和数学上的写法一模一样，
例如：1，100，-8080，0，等等。

2. 计算机由于使用二进制，所以，有时候用十六进制表示整数比较方便，十六进制用0x前缀和0-9，a-f表示，
例如：0xff00，0xa5b4c3d2，等等。
'''

'''
浮点数:
1. 浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，
比如，1.23x109(9是上标)和12.3x108(8是上标)是完全相等的。

2. 浮点数可以用数学写法，如1.23，3.14，-9.01，等等。但是对于很大或很小的浮点数，就必须用科学计数法表示，
把10用e替代，1.23x109就是1.23e9，或者12.3e8，0.000012可以写成1.2e-5，等等。

3. 整数和浮点数在计算机内部存储的方式是不同的，整数运算永远是精确的（除法难道也是精确的？是的！），
而浮点数运算则可能会有四舍五入的误差。
'''


'''
1. 在Python中，有两种除法： / 和  //
2. /除法计算结果是浮点数，即使是两个整数恰好整除，结果也是浮点数
3. // 称为地板除，两个整数的除法仍然是整数, 即只取结果的整数部分  
4. Python还提供一个余数运算: %，可以得到两个整数相除的余数
'''
print('测试Python中的除法运算：')
print("10 / 3 =", 10 / 3)
print("10 // 3 =", 10 // 3)
print("9 // 3 =", 9 // 3)
print("9 // 3 =", 9 // 3)
print("10 % 3 =", 10 % 3)
print("9 % 3 =", 9 % 3)
